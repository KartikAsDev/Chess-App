{"ast":null,"code":"var _jsxFileName = \"/Users/Kartik/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { stat } from 'fs';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      n: '',\n      prevEleColor: '',\n      prevEle: ''\n    };\n  }\n\n  componentDidUpdate(props, state) {\n    console.log('props', props, 'state', state);\n    document.getElementById('chessBoard').innerHTML = \"\";\n    var chessBoard = document.getElementById('chessBoard');\n\n    for (var i = 0; i < this.state.n; ++i) {\n      var row = document.createElement('div');\n      row.className = 'row';\n\n      if (this.state.n % 2 === 0 && i % 2 === 0) {\n        row.style.flexDirection = 'row-reverse';\n      }\n\n      row.style.height = `${400 / this.state.n}px`;\n\n      for (var j = 0; j < this.state.n; ++j) {\n        var column = document.createElement('div');\n        column.className = 'column';\n\n        if (this.state.n % 2 !== 0 && i % 2 === 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        } else if (this.state.n % 2 !== 0 && i % 2 !== 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n        } else {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        }\n\n        column.style.width = `${400 / this.state.n}px`;\n        column.style.height = `${400 / this.state.n}px`;\n        row.appendChild(column);\n      }\n\n      chessBoard.appendChild(row);\n    }\n  }\n\n  handleValueOfN(ele) {\n    this.setState({\n      n: ele.target.value\n    });\n  }\n\n  handleSelect(ele) {\n    this.state.prevEle.target.style.backgroundColor = prevEleColor;\n    this.setState({\n      prevEleColor: ele.target.style.backgroundColor,\n      prevEle: ele\n    });\n    ele.target.style.backgroundColor = 'yellow';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \" Enter Grid Size \"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.n,\n      onChange: ele => this.handleValueOfN(ele),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chessBoard\",\n      className: \"chessBoard\",\n      onClick: ele => this.handleSelect(ele),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Kartik/Desktop/my-app/src/App.js"],"names":["React","Component","stat","App","constructor","state","n","prevEleColor","prevEle","componentDidUpdate","props","console","log","document","getElementById","innerHTML","chessBoard","i","row","createElement","className","style","flexDirection","height","j","column","backgroundColor","width","appendChild","handleValueOfN","ele","setState","target","value","handleSelect","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { stat } from 'fs';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      n: '',\n      prevEleColor: '',\n      prevEle: '',\n    }\n  }\n\n\n  componentDidUpdate(props, state) {\n    console.log('props', props, 'state', state);\n    document.getElementById('chessBoard').innerHTML = \"\";\n    var chessBoard = document.getElementById('chessBoard');\n    for (var i = 0; i < this.state.n; ++i){\n      var row = document.createElement('div')\n      row.className = 'row';\n\n      if(this.state.n%2 === 0 && i % 2 === 0) {\n        row.style.flexDirection = 'row-reverse'; \n      } \n      row.style.height = `${400/this.state.n}px`;\n      for (var j = 0; j < this.state.n; ++j){\n        var column = document.createElement('div')\n        column.className = 'column';\n        if(this.state.n%2 !== 0 && i%2 === 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        } else if(this.state.n%2 !== 0 && i%2 !== 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n        } else {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        }\n        column.style.width = `${400/this.state.n}px`;\n        column.style.height = `${400/this.state.n}px`;\n        row.appendChild(column)\n      }\n      chessBoard.appendChild(row)\n    }   \n   }\n\n   handleValueOfN(ele) {\n     this.setState({\n       n: ele.target.value,\n     });\n   }\n\n   handleSelect(ele) {\n    this.state.prevEle.target.style.backgroundColor = prevEleColor;\n    this.setState({\n      prevEleColor: ele.target.style.backgroundColor,\n      prevEle: ele,\n    });\n    ele.target.style.backgroundColor = 'yellow';\n   }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"inputDiv\">\n          <span> Enter Grid Size </span>\n          <input value={this.state.n} onChange={(ele) => this.handleValueOfN(ele)}></input>\n        </div>\n        <div id=\"chessBoard\" className=\"chessBoard\" onClick={(ele) => this.handleSelect(ele)}>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}