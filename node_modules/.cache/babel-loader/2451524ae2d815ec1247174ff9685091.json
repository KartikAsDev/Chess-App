{"ast":null,"code":"var _jsxFileName = \"/Users/Kartik/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      n: '',\n      prevEleColor: '',\n      prevEle: ''\n    };\n  }\n\n  componentDidUpdate(props, state) {// document.getElementById('chessBoard').innerHTML = \"\";\n    // var chessBoard = document.getElementById('chessBoard');\n    // for (var i = 0; i < this.state.n; ++i){\n    //   var row = document.createElement('div')\n    //   row.className = 'row';\n    //   if(this.state.n%2 === 0 && i % 2 === 0) {\n    //     row.style.flexDirection = 'row-reverse'; \n    //   } \n    //   row.style.height = `${400/this.state.n}px`;\n    //   for (var j = 0; j < this.state.n; ++j){\n    //     var column = document.createElement('div')\n    //     column.className = 'column';\n    //     if(this.state.n%2 !== 0 && i%2 === 0) {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n    //     } else if(this.state.n%2 !== 0 && i%2 !== 0) {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n    //     } else {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n    //     }\n    //     column.style.width = `${400/this.state.n}px`;\n    //     column.style.height = `${400/this.state.n}px`;\n    //     row.appendChild(column)\n    //   }\n    //   chessBoard.appendChild(row)\n    // }   \n  }\n\n  renderBoard() {\n    if (document.getElementById('chessBoard')) {\n      document.getElementById('chessBoard').innerHTML = \"\";\n      var chessBoard = document.getElementById('chessBoard');\n\n      for (var i = 0; i < this.state.n; ++i) {\n        var row = document.createElement('div');\n        row.className = 'row';\n\n        if (this.state.n % 2 === 0 && i % 2 === 0) {\n          row.style.flexDirection = 'row-reverse';\n        }\n\n        row.style.height = `${400 / this.state.n}px`;\n\n        for (var j = 0; j < this.state.n; ++j) {\n          var column = document.createElement('div');\n          column.className = 'column';\n\n          if (this.state.n % 2 !== 0 && i % 2 === 0) {\n            column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n          } else if (this.state.n % 2 !== 0 && i % 2 !== 0) {\n            column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n          } else {\n            column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n          }\n\n          column.style.width = `${400 / this.state.n}px`;\n          column.style.height = `${400 / this.state.n}px`;\n          row.appendChild(column);\n        }\n\n        chessBoard.appendChild(row);\n      }\n    }\n  }\n\n  handleValueOfN(ele) {\n    this.setState({\n      n: ele.target.value\n    });\n  }\n\n  handleSelect(ele) {\n    const x = this.state.prevEle;\n    console.log('x', x);\n\n    if (x) {\n      x.target.style.backgroundColor = this.state.prevEleColor;\n    }\n\n    ele.target.style.backgroundColor = 'yellow';\n    this.setState({\n      prevEleColor: ele.target.style.backgroundColor,\n      prevEle: ele\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \" Enter Grid Size \"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.n,\n      onChange: ele => this.handleValueOfN(ele),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.renderBoard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \" Confirm \")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chessBoard\",\n      className: \"chessBoard\",\n      onClick: ele => this.handleSelect(ele),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Kartik/Desktop/my-app/src/App.js"],"names":["React","Component","App","constructor","state","n","prevEleColor","prevEle","componentDidUpdate","props","renderBoard","document","getElementById","innerHTML","chessBoard","i","row","createElement","className","style","flexDirection","height","j","column","backgroundColor","width","appendChild","handleValueOfN","ele","setState","target","value","handleSelect","x","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      n: '',\n      prevEleColor: '',\n      prevEle: '',\n    }\n  }\n\n\n  componentDidUpdate(props, state) {\n    // document.getElementById('chessBoard').innerHTML = \"\";\n    // var chessBoard = document.getElementById('chessBoard');\n    // for (var i = 0; i < this.state.n; ++i){\n    //   var row = document.createElement('div')\n    //   row.className = 'row';\n\n    //   if(this.state.n%2 === 0 && i % 2 === 0) {\n    //     row.style.flexDirection = 'row-reverse'; \n    //   } \n    //   row.style.height = `${400/this.state.n}px`;\n    //   for (var j = 0; j < this.state.n; ++j){\n    //     var column = document.createElement('div')\n    //     column.className = 'column';\n    //     if(this.state.n%2 !== 0 && i%2 === 0) {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n    //     } else if(this.state.n%2 !== 0 && i%2 !== 0) {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n    //     } else {\n    //       column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n    //     }\n    //     column.style.width = `${400/this.state.n}px`;\n    //     column.style.height = `${400/this.state.n}px`;\n    //     row.appendChild(column)\n    //   }\n    //   chessBoard.appendChild(row)\n    // }   \n   }\n\n   renderBoard() {\n     if(document.getElementById('chessBoard')) {\n      document.getElementById('chessBoard').innerHTML = \"\";\n    var chessBoard = document.getElementById('chessBoard');\n    for (var i = 0; i < this.state.n; ++i){\n      var row = document.createElement('div')\n      row.className = 'row';\n\n      if(this.state.n%2 === 0 && i % 2 === 0) {\n        row.style.flexDirection = 'row-reverse'; \n      } \n      row.style.height = `${400/this.state.n}px`;\n      for (var j = 0; j < this.state.n; ++j){\n        var column = document.createElement('div')\n        column.className = 'column';\n        if(this.state.n%2 !== 0 && i%2 === 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        } else if(this.state.n%2 !== 0 && i%2 !== 0) {\n          column.style.backgroundColor = j % 2 === 0 ? 'black' : 'white';\n        } else {\n          column.style.backgroundColor = j % 2 === 0 ? 'white' : 'black';\n        }\n        column.style.width = `${400/this.state.n}px`;\n        column.style.height = `${400/this.state.n}px`;\n        row.appendChild(column)\n      }\n      chessBoard.appendChild(row)\n    }   \n     }\n   }\n\n   handleValueOfN(ele) {\n     this.setState({\n       n: ele.target.value,\n     });\n   }\n\n   handleSelect(ele) {\n    const x = this.state.prevEle;\n    console.log('x', x);\n    if(x) {\n      x.target.style.backgroundColor = this.state.prevEleColor;\n    }\n    ele.target.style.backgroundColor = 'yellow';\n    this.setState({\n      prevEleColor: ele.target.style.backgroundColor,\n      prevEle: ele,\n    });\n   }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"inputDiv\">\n          <span> Enter Grid Size </span>\n          <input value={this.state.n} onChange={(ele) => this.handleValueOfN(ele)}></input>\n          <button onClick={this.renderBoard()}> Confirm </button>\n        </div>\n\n        <div id=\"chessBoard\" className=\"chessBoard\" onClick={(ele) => this.handleSelect(ele)}>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}